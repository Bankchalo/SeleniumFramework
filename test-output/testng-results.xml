<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="My Suite" duration-ms="28946" started-at="2018-11-19T03:46:07Z" finished-at="2018-11-19T03:46:36Z">
    <groups>
    </groups>
    <test name="My Test" duration-ms="28946" started-at="2018-11-19T03:46:07Z" finished-at="2018-11-19T03:46:36Z">
      <class name="cetera.Automation.tests.MyFirstTest">
        <test-method status="PASS" signature="setUpResources()[pri:0, instance:cetera.Automation.tests.MyFirstTest@5123a213]" name="setUpResources" is-config="true" duration-ms="1859" started-at="2018-11-19T03:46:05Z" finished-at="2018-11-19T03:46:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpResources -->
        <test-method status="PASS" signature="startClass()[pri:0, instance:cetera.Automation.tests.MyFirstTest@5123a213]" name="startClass" is-config="true" duration-ms="30" started-at="2018-11-19T03:46:07Z" finished-at="2018-11-19T03:46:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startClass -->
        <test-method status="PASS" signature="startMethod(java.lang.reflect.Method)[pri:0, instance:cetera.Automation.tests.MyFirstTest@5123a213]" name="startMethod" is-config="true" duration-ms="5600" started-at="2018-11-19T03:46:07Z" finished-at="2018-11-19T03:46:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cetera.Automation.tests.MyFirstTest.loginWithValidCredentials(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startMethod -->
        <test-method status="FAIL" signature="loginWithValidCredentials(java.util.Hashtable)[pri:0, instance:cetera.Automation.tests.MyFirstTest@5123a213]" name="loginWithValidCredentials" duration-ms="8313" started-at="2018-11-19T03:46:13Z" data-provider="dataProviderOmi" finished-at="2018-11-19T03:46:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{TC_ID=loginWithValidCredentials, TRIP_TYPE=OneWay, USERNAME=mercury, SERVICE_CLASS=Business, PASSWORD=mercury}]]>
              </value>
            </param>
          </params>
          <exception class="junit.framework.AssertionFailedError">
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:47)
at junit.framework.Assert.fail(Assert.java:53)
at cetera.Automation.tests.MyFirstTest.loginWithValidCredentials(MyFirstTest.java:26)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at cetera.Automation.testUtils.DynamicRunner.createTestRunner(DynamicRunner.java:133)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentials -->
        <test-method status="PASS" signature="killMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:cetera.Automation.tests.MyFirstTest@5123a213]" name="killMethod" is-config="true" duration-ms="822" started-at="2018-11-19T03:46:23Z" finished-at="2018-11-19T03:46:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cetera.Automation.tests.MyFirstTest.loginWithValidCredentials(java.util.Hashtable)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=loginWithValidCredentials status=FAILURE method=MyFirstTest.loginWithValidCredentials(java.util.Hashtable)[pri:0, instance:cetera.Automation.tests.MyFirstTest@5123a213] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killMethod -->
        <test-method status="PASS" signature="startMethod(java.lang.reflect.Method)[pri:0, instance:cetera.Automation.tests.MyFirstTest@5123a213]" name="startMethod" is-config="true" duration-ms="5315" started-at="2018-11-19T03:46:24Z" finished-at="2018-11-19T03:46:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cetera.Automation.tests.MyFirstTest.loginWithValidCredentialsViral(java.util.Hashtable)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startMethod -->
        <test-method status="PASS" signature="loginWithValidCredentialsViral(java.util.Hashtable)[pri:0, instance:cetera.Automation.tests.MyFirstTest@5123a213]" name="loginWithValidCredentialsViral" duration-ms="5515" started-at="2018-11-19T03:46:29Z" data-provider="dataProviderOmi" finished-at="2018-11-19T03:46:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{TC_ID=loginWithValidCredentialsViral, TRIP_TYPE=OneWay, USERNAME=mercury, SERVICE_CLASS=Business, PASSWORD=mercury}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentialsViral -->
        <test-method status="PASS" signature="killMethod(java.lang.reflect.Method, org.testng.ITestResult)[pri:0, instance:cetera.Automation.tests.MyFirstTest@5123a213]" name="killMethod" is-config="true" duration-ms="672" started-at="2018-11-19T03:46:35Z" finished-at="2018-11-19T03:46:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void cetera.Automation.tests.MyFirstTest.loginWithValidCredentialsViral(java.util.Hashtable)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=loginWithValidCredentialsViral status=SUCCESS method=MyFirstTest.loginWithValidCredentialsViral(java.util.Hashtable)[pri:0, instance:cetera.Automation.tests.MyFirstTest@5123a213] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killMethod -->
        <test-method status="PASS" signature="killClass()[pri:0, instance:cetera.Automation.tests.MyFirstTest@5123a213]" name="killClass" is-config="true" duration-ms="0" started-at="2018-11-19T03:46:36Z" finished-at="2018-11-19T03:46:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killClass -->
        <test-method status="PASS" signature="killResources()[pri:0, instance:cetera.Automation.tests.MyFirstTest@5123a213]" name="killResources" is-config="true" duration-ms="0" started-at="2018-11-19T03:46:36Z" finished-at="2018-11-19T03:46:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killResources -->
      </class> <!-- cetera.Automation.tests.MyFirstTest -->
    </test> <!-- My Test -->
  </suite> <!-- My Suite -->
</testng-results>
